# 2. Создать список, состоящий из кубов нечётных чисел от 1 до 1000
# (куб X - третья степень числа X):
#
# Вычислить сумму тех чисел из этого списка, сумма цифр которых делится нацело на 7.
# Например, число «19 ^ 3 = 6859» будем включать в сумму, так как 6 + 8 + 5 + 9 = 28 – делится нацело на 7.
# Внимание: использовать только арифметические операции!
# К каждому элементу списка добавить 17 и заново вычислить сумму тех чисел из этого списка,
# сумма цифр которых делится нацело на 7.
# * Решить задачу под пунктом b, не создавая новый список.

list_odd_cube = []
list_divisible7 = []
multipliable = 1

while True:
    # Проверяем четное ли число, если четное, то добавляем к нему 1
    if multipliable % 2 == 0:
        #print(multipliable, "Четное число, добавляю единичку")
        multipliable = multipliable + 1
    #Если число прошло перую проверку и не получило + 1, проверяем делится ли оно на 2 без остатка и если делится
    #возводим его в куб и добавляем в список
    else:
        if multipliable % 2 != 0:
            #print(multipliable, "Нечетное число, возвожу в степень, добавляю в список, добавляю единичку")
            cube = multipliable ** 3
            list_odd_cube.append(cube)
            #Находим сумму цифр числа
            sum_digits = sum(map(int, str(cube)))
            multipliable = multipliable + 1
        # Проверяем делится ли оно без остатка на 7
        if sum_digits % 7 == 0:
            list_divisible7.append(cube)
            #print(sum_digits, "сумма цифр числа", cube, "делится на 7 без остатка")
        else:
            if multipliable >= 1000:
                #print("Достигнут лимит чисел возводимых в степень. Скрипт вроде бы отработал успешно")
                break

print("Список состоящий из кубов нечетных чисел от 1 до 1000", list_odd_cube)
print("Список сумма чисел элементов которого, делится на 7", list_divisible7)
print(sum(list_divisible7), "- сумма тех чисел, сумма цифр которых, делится нацело на 7")

#--------------

# попробуем все числа в списке с нечетными числами в кубе добавить 17

list_odd_cube = [el + 17 for el in list_odd_cube]
#print(list_odd_cube)

# отлично, очищаем список с числами, которые делятся на 7

list_divisible7.clear()
#print(list_divisible7)

# получилось, дальше пишем цикл, который будет проверять, есть ли остаток у чисел при делении на 7,
# изаписывать числа без остатка в list_divisible7

while True:
    for el in list_odd_cube:
        element = el
        #print(element)
        #получилось, теперь найдем сумму цифр чисел из списка list_odd_cube
        sum_element = sum(map(int, str(element)))
        #print(sum_element)
        #вроде бы готовенько, теперь дело за малым, находим числа , которые делятся на 7 без остатка
        if sum_element % 7 == 0:
            list_divisible7.append(element)
            # print(sum_element, "это сумма цифр числа", element, "делится на 7 без остатка")
        if sum_element % 7 != 0:
            continue
            #print(sum_element, "это сумма цифр числа", element, "не делится на 7 без остатка")
    break

print("Список состоящий из кубов нечетных чисел от 1 до 1000 + 17", list_odd_cube)
print("Список, сумма чисел элементов которого, делится на 7", list_divisible7)
print(sum(list_divisible7), "- сумма тех чисел, сумма цифр которых, делится нацело на 7")

# Вроде бы справился, но это неточно, можеть быть, что я задание неправильно понял и накрутил много лишнего,
# но все равно, было интересно